import React, { useState } from "react";
import '../assets/style/media.css';
import "../assets/style/style.css";
import star from "../assets/img/star_icon.png";
import { Modal, Button } from "react-bootstrap";
import christmas from "../assets/img/christmas_bg.svg";
import Shuffle from "./participant/shuffle";
import { addParticipant } from "../rest";
import AddParticipant from "./participant/add";
const LandingPage = (props) => {
	const [modalIsOpen, setModalIsOpen] = useState(false);
	const [email, setEmail] = useState("");
	const [name, setName] = useState("");
	const [emailerror,setemailerror]=useState(false);

	//For Opening participant 
	const participant = (e) => {
		try {
			e.preventDefault();
			props.history.push("/participants")
		} catch (error) {

		}
	}

	const handleAddParticipant  = async (details) => {
		try {
				if (details.name.trim() && details.email.trim()) {
					await addParticipant({
						name: details.name.trim(),
						emailAddress: details.email.trim()
					})
					.then((allParticipants) => {
						if(allParticipants.Status == "400") 
						{
							setemailerror(true);
						} else{
							showModal(false);
						}
					})
					.catch((error) => {
						console.error(error);
					});
				}
			
			}
		 catch (error) {
			console.error(error);
		} finally {
			
		}
	}

	const showModal = () => {
		setModalIsOpen(!modalIsOpen)
	}

    const ShuffleHandler=(e)=>{
        try {
			e.preventDefault();
			props.history.push("/shuffle")

		} catch (error) {

		}
    }

	return (
		<div class="main_section">
			<div class="star_icon">
				<img src={star} alt="" />
			</div>
			<div class="bg_right_christmas_img">
				<img src={christmas} alt="" />
			</div>
			<div class="christmas_content_box">
				<h1><div class="dd_none">S</div>ecret <div class="dd_none">S</div>anta <span>party</span></h1>
				<div class="dbl_box">
					<div class="btn">
						<a class="a_btn open_popup add_btn cursor-pointer" onClick={showModal}>
							Add
						</a>
					</div>
					<div class="btn">
						<a class="a_btn cursor-pointer" onClick={participant}>
							View
						</a>
					</div>
                    <div class="btn">
					<a class="sufle_icon a_btn cursor-pointer" onClick={ShuffleHandler}>
						
						<svg width="216" height="176" viewBox="0 0 216 176" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M214.183 149.075C214.067 149.216 213.941 149.349 213.816 149.482C213.762 149.539 213.714 149.601 213.657 149.657L189.657 173.657C188.157 175.158 186.122 176 184 176C181.878 176 179.843 175.158 178.343 173.657C176.843 172.157 176 170.122 176 168C176 165.878 176.843 163.844 178.343 162.343L188.686 152H176.936C165.477 151.989 154.186 149.248 143.997 144.005C133.809 138.762 125.016 131.167 118.346 121.849L76.634 63.4502C71.4465 56.2033 64.6073 50.2964 56.6827 46.2185C48.7582 42.1406 39.9762 40.009 31.064 40.0002H8C5.87827 40.0002 3.84344 39.1573 2.34315 37.6571C0.842854 36.1568 0 34.1219 0 32.0002C0 29.8785 0.842854 27.8436 2.34315 26.3434C3.84344 24.8431 5.87827 24.0002 8 24.0002H31.064C42.5227 24.0116 53.8138 26.7523 64.0025 31.9955C74.1913 37.2387 82.9844 44.8336 89.654 54.1512L131.366 112.55C136.554 119.797 143.393 125.704 151.317 129.782C159.242 133.86 168.024 135.991 176.936 136H188.686L178.343 125.657C176.843 124.157 176 122.122 176 120C176 117.878 176.843 115.844 178.343 114.343C179.843 112.843 181.878 112 184 112C186.122 112 188.157 112.843 189.657 114.343L213.657 138.343C213.714 138.399 213.762 138.461 213.816 138.518C213.941 138.651 214.066 138.784 214.183 138.925C214.274 139.035 214.354 139.152 214.438 139.266C214.508 139.362 214.583 139.454 214.649 139.553C214.734 139.68 214.809 139.811 214.885 139.941C214.941 140.036 215 140.127 215.052 140.224C215.122 140.354 215.181 140.486 215.242 140.618C215.292 140.724 215.344 140.827 215.389 140.935C215.441 141.061 215.484 141.19 215.529 141.319C215.572 141.437 215.617 141.554 215.654 141.674C215.693 141.804 215.722 141.934 215.754 142.064C215.785 142.188 215.82 142.309 215.844 142.434C215.874 142.585 215.893 142.738 215.914 142.891C215.929 142.997 215.949 143.101 215.96 143.208C216.012 143.735 216.012 144.266 215.96 144.792C215.95 144.899 215.929 145.003 215.914 145.109C215.893 145.262 215.874 145.415 215.844 145.566C215.82 145.691 215.785 145.812 215.754 145.936C215.722 146.066 215.693 146.196 215.654 146.326C215.617 146.446 215.572 146.563 215.53 146.681C215.484 146.81 215.441 146.939 215.39 147.065C215.344 147.173 215.291 147.276 215.242 147.382C215.181 147.514 215.122 147.646 215.052 147.776C215 147.873 214.941 147.964 214.885 148.059C214.809 148.189 214.735 148.32 214.649 148.447C214.583 148.546 214.509 148.638 214.439 148.734C214.354 148.848 214.274 148.964 214.183 149.075ZM119.013 66.9812C119.868 67.5924 120.835 68.0291 121.858 68.2664C122.882 68.5037 123.942 68.537 124.979 68.3642C126.015 68.1915 127.007 67.8161 127.899 67.2597C128.79 66.7032 129.563 65.9766 130.173 65.1212L131.366 63.4512C136.553 56.2041 143.393 50.297 151.317 46.2189C159.242 42.1408 168.024 40.0091 176.936 40.0002H188.686L178.343 50.3432C176.843 51.8435 176 53.8784 176 56.0002C176 58.122 176.843 60.1569 178.343 61.6572C179.843 63.1575 181.878 64.0004 184 64.0004C186.122 64.0004 188.157 63.1575 189.657 61.6572L213.657 37.6572C213.714 37.6012 213.762 37.5392 213.816 37.4822C213.941 37.3492 214.066 37.2162 214.183 37.0752C214.274 36.9652 214.354 36.8482 214.438 36.7342C214.508 36.6382 214.583 36.5462 214.649 36.4472C214.734 36.3202 214.809 36.1892 214.885 36.0592C214.941 35.9642 215 35.8732 215.052 35.7762C215.122 35.6462 215.181 35.5142 215.242 35.3822C215.292 35.2762 215.344 35.1732 215.389 35.0652C215.441 34.9392 215.484 34.8102 215.529 34.6812C215.572 34.5632 215.617 34.4462 215.654 34.3262C215.693 34.1962 215.722 34.0662 215.754 33.9362C215.785 33.8122 215.82 33.6912 215.844 33.5662C215.874 33.4152 215.894 33.2622 215.914 33.1092C215.929 33.0032 215.949 32.8992 215.96 32.7922C216.012 32.2655 216.012 31.7349 215.96 31.2082C215.95 31.1012 215.929 30.9972 215.914 30.8912C215.894 30.7382 215.874 30.5852 215.844 30.4342C215.82 30.3092 215.785 30.1882 215.754 30.0642C215.722 29.9342 215.693 29.8042 215.654 29.6742C215.617 29.5542 215.572 29.4372 215.53 29.3192C215.484 29.1902 215.441 29.0612 215.39 28.9352C215.344 28.8272 215.292 28.7242 215.242 28.6182C215.181 28.4862 215.122 28.3542 215.052 28.2242C215 28.1272 214.941 28.0362 214.885 27.9412C214.809 27.8112 214.735 27.6802 214.649 27.5532C214.583 27.4542 214.509 27.3622 214.439 27.2662C214.354 27.1522 214.274 27.0362 214.183 26.9252C214.067 26.7842 213.941 26.6512 213.816 26.5182C213.762 26.4612 213.714 26.3992 213.657 26.3432L189.657 2.3432C188.914 1.60032 188.032 1.01103 187.062 0.608978C186.091 0.20693 185.051 0 184 0C182.949 0 181.909 0.20693 180.938 0.608978C179.968 1.01103 179.086 1.60032 178.343 2.3432C177.6 3.08609 177.011 3.96803 176.609 4.93866C176.207 5.90929 176 6.9496 176 8.00021C176 9.05081 176.207 10.0911 176.609 11.0618C177.011 12.0324 177.6 12.9143 178.343 13.6572L188.686 24.0002H176.936C165.477 24.0116 154.186 26.7523 143.997 31.9955C133.809 37.2387 125.016 44.8336 118.346 54.1512L117.153 55.8222C116.542 56.6771 116.106 57.6439 115.869 58.6674C115.632 59.6909 115.598 60.7512 115.771 61.7875C115.944 62.8238 116.319 63.816 116.875 64.7073C117.432 65.5986 118.158 66.3717 119.013 66.9822V66.9812ZM88.986 109.019C88.1313 108.408 87.1646 107.972 86.1411 107.735C85.1176 107.498 84.0574 107.464 83.0211 107.637C81.9848 107.81 80.9927 108.185 80.1015 108.741C79.2103 109.298 78.4374 110.024 77.827 110.879L76.634 112.549C71.4466 119.796 64.6074 125.703 56.6829 129.781C48.7583 133.86 39.9763 135.991 31.064 136H8C5.87827 136 3.84344 136.843 2.34315 138.343C0.842854 139.844 0 141.878 0 144C0 146.122 0.842854 148.157 2.34315 149.657C3.84344 151.157 5.87827 152 8 152H31.064C42.5227 151.989 53.8138 149.248 64.0025 144.005C74.1913 138.762 82.9844 131.167 89.654 121.849L90.847 120.178C91.4578 119.323 91.8942 118.357 92.1313 117.333C92.3684 116.309 92.4015 115.249 92.2288 114.213C92.0561 113.177 91.6809 112.184 91.1246 111.293C90.5684 110.402 89.842 109.629 88.987 109.018L88.986 109.019Z" fill="#fff"/>
						</svg>
						shuffle
					</a>
				</div>
				
				</div>
			</div>
			{modalIsOpen &&
				<AddParticipant
					add
					onClose={() => {
						setModalIsOpen(false);
					}}
					name=""
					email=""
					onSubmit={handleAddParticipant}
					Emailerror={emailerror}
				/>
				
			}
		</div>
	)
}

export default LandingPage;